
Code/Art Approaches to Data Visualization 


 J. J. Sylvia IV 


 This chapter introduces a code/art approach to data visualization. Though coding has received increasingly greater amounts of attention within the field of Digital Humanities, it has primarily focused on more traditional types of visualizations such as charts and graphs. However, the iteration that is possible through generative design affords more artistic approaches. Casey Reas and Chandler McWilliams claim that particular programming languages afford specific opportunities. In much the same way that a carpenter would select particular tools and a particular wood depending on the project, programming languages require similar careful selection. I use p5.js as the language of choice for this chapter because it is a free, open source language specifically designed for beginners, artists, and educators. It is a very accessible language that allows one to quickly begin creating dynamic content on the screen, even with very little previous programming experience. 

 My project, Aperveillance: Watching with Open Data , serves as the case study for this chapter. Through a web-based visualization, I take an artistic approach to data visualization that is afforded by iteration and generative design. Whereas a more traditional approach to data visualization would seek to answer questions or create clearer explanations through the process of visualization, my work instead aims to provoke further questions about the societal tensions between surveillance and privacy. My research question in light of this goal is: How can the artistic combination of disparate sources of publicly available data make clear the societal tensions between safety, surveillance, and privacy? A Digital Humanities approach to this research question can make these tensions more immediately present and real to a viewer by drawing them into the activity of surveillance as a participant. \


 Ethical issues related to code/art data visualizations mirror many of the larger ethical concerns of working with data in general. First, the data that one uses should be both reliable and verifiable to the furthest extent possible. In other words, any data used for a visualization should come from a trustworthy and accurate source, otherwise the visualization that is created from the data will be similarly misleading or inaccurate. This is especially important for artistic visualizations because it is often harder for viewers of the visualization to verify the accuracy of the data than it would be in a chart or graph. Because artistic visualizations offer differ- ent ways of seeing data, the underlying data can often be harder to quan- tify. While this other way of seeing data is an important benefit of artistic visualizations, it should also underscore the importance of beginning with accurate data. 
\fs24 \

 Determining the reliability of data is often a difficult process, how- ever, one indicator for quality is the source of the data. For example, data from open government sources, such as the City of Raleigh\'97open Data initiative that I used for my project, is likely to be more reliable than data from unknown or unofficial sources on the web. Although you will be creating artistic projects, these visualizations can be persuasive, thus it remains important to use valid data for that persuasion. 

 The other major ethical issue concerns protecting the privacy of those who may be represented in the data. Although all reliable data sources will have anonymized their data before making it accessible to the pub- lic, the vast amount of data that now exists means that it is increasingly likely that multiple data sources can be combined together in order to identify seemingly anonymized individuals. For example, in 2006, America online released 20 million anonymized search queries from that year. Despite this anonymization, reporters from The New York Times were able to cross reference the queries and identify a particular user\'92s search queries.

Additionally, if you collect information, even from public sources, there may be ethical problems with displaying that data in new ways. For example, a 2010 Harvard Facebook study and a 2016 release of data collected from public profiles on the oKCupid dating website both raised ethical concerns. Even though the information in these studies was publicly accessible, the arrangement of the data in a new way can draw extra attention to the data and put it a new context that was never intended by the user who originally posted it.

 In other words, consent was not given for this particular use of the data. Collecting, formatting, and then using data in new ways changes its context and, if your data contains information about individual people, this is an issue for which extra care should be taken. 

When academic researchers collect their own data, the context in which the data will be used must be approved by the participants before the data gathering process can begin. The protection and restriction of confidential data must be clearly elaborated and approved by review boards at universities. However, private corporations do not face the same ethical scrutiny and users often agree to allow carte-blanche use of their data by simply accepting the Terms of Service when they sign up for an account with a particular site or application. Users frequently approve these terms without reading them thoroughly, or at all. Because of these vastly different approaches to collecting and using data, academics must pay particular care to ethics when using data that they have not personally collected, especially if such data has been collected by a private company. 

 In teaching p5.js as part of both classes and Digital Humanities related workshops, I have developed a better understanding of the strengths and weaknesses of a creative coding approach. First, the artistic nature of p5.js affords the opportunity to create data visualizations that offer a high level of affective impact, which is the often emotional or visceral transformation that one experiences in reaction to a new experience. Viewers are more often engaged with an artistic visualization than they would be with a chart or graph. All data visualizations are engaging, but creative code approaches afford the opportunity to open spaces for questions by allowing the viewer to be an active participant in the process. In other words, the meaning of a particular visualization may be somewhat ambiguous in a way that asks more questions than it answers. Viewers may be able to ask their own questions about ethics or meaning based on their reaction to a visualization. 


 Said another way, traditional visualizations aim to render complicated data in a way that it is easily understandable at a glance. A bar chart, for example, can make fluctuations in income across a span of years quickly recognizable in a way that looking through a larger spreadsheet of numbers would not. A bar chart, though commonly visualized using computer software, is still something that could easily be created by hand. I could fairly quickly recreate a bar chart using a piece of paper and a pen. Coding approaches to visualization unlock techniques that would be either impossible or highly infeasible by hand. Both the generative nature of coding\'97the ability of the computer to run through thousands of iterations of code per second\'97and its ability to use multimedia inputs highlight the strengths of this approach. 


 The generative nature of coding offers the possibility to create elaborate artistic pieces with comparatively little code. For example, the following code, adapted from Casey Reas, Lauren McCarthy, and Ben Fry\'92s introductory text on p5.js, will create a series of kinked lines.

 These few lines of code can generate over one hundred lines on the screen in a fraction of second (see Fig. \cf3 12.2\cf2 ). This generative approach can also be used with various types of data, as a way to influence the iterations that occur, or as data that is displayed to viewers. In addition to data, p5.js facilitates access to images, video, and sound, allowing multi- media to be integrated into and manipulated by the generative process. 
\fs24 \

\fs26\fsmilli13333 This generative design approach can be used in a variety of ways. on the one hand, it might be used to answer difficult design questions. For example, in 2004, NASA engineers used generative 
\f2\b evolutionary algorithms 
\f0\b0 to design an effective X-band antenna: \'93Whereas the cur- rent practice of designing antennas by hand is severely limited because it is both time and labor intensive and requires a significant amount of domain knowledge, evolutionary algorithms can be used to search the 
\fs24 \

\fs26\fsmilli13333 design space and automatically find novel antenna designs that are more effective than would otherwise be developed\'94.
\fs18\fsmilli9333 \cf3 \up8 4 
 \cf2 \up0 In other words, generative design was used to create random antennae that were then tested for effectiveness. The most effective ones were allowed to evolve further until a final most efficient design was derived. 
\fs24 \

\fs26\fsmilli13333 on the other hand, a humanities-based project might raise more questions than it answers. For example, the 2006 exhibit, Being not truthful, by Ralph Ammer and Stefan Sagmeister, provokes questions about truth and vulnerability: 

\'93Being not truthful works against me\'94 is part of a list in Stefan Sagmeister\'92s diary entitled \'93Things I have learned in my life so far.\'94 In the installation.Being not truthful, this maxim is woven into a virtual spider- web, which rips if a viewer\'92s shadow touches it; then, bit by bit, the web reconstructs itself. This fragile construction serves as a metaphor for the vulnerability of Sagmeister\'92s aphorism and the effort required to follow it, raising questions about the nature of truth and the value of sincerity.


The movement of those who are viewing the exhibit is incorporated into the project itself, highlighting the possibility of drawing on information from the surrounding environment as part of the project. This type of project does not give us any particular answers\'97no best design emerges and we do not straightforwardly learn anything about the truth. Instead, we are provoked to ask even more questions about the nature of truth. 


one weakness of this approach is that it can actually be more difficult to use than traditional data visualization tools when one is trying to get the same types of results as traditional data visualizations. For instance, when I first introduce these creative visualization projects in classes and workshops, many students immediately think about a variety of charts or graphs that they might create about their text. It is quite possible to do this kind of visualization through a programming language like p5.js, but other tools such as Tableau are able to do this much easier with a wider variety of analytic tools quickly available. Many people who have done past data visualization work tend to default to the same types of questions they would attempt to answer with those tools. For example, I have had multiple students who wanted to analyze the frequency of occurrence for a particular word or words within a text. While this is possible to do with a creative coding tool such as p5.js, there are easier ways of doing this. 


 Therefore, the major weakness and strength of this approach are related. A creative coding approach is strongest when it is used to create outside-the-box visualizations based on repetition and iteration. However, to use the tools in this way, one must begin by thinking about data sets in a way that differs from traditional data visualization approaches. Creative approaches are less about analysis and more about exploration. They are less about answering questions and more about generating new questions. 

 Conclusions 

 Code/art projects make use of the iterative nature of generative design. It is this iteration, in part, that affords the possibility of creating artistic data visualizations. This artistic approach allows one to ask differ- ent questions than those that could be answered through traditional data analysis. Based on my analysis of qualitative verbal feedback provided by viewers of the Aperveillance project, several conclusions can be drawn. First, many people are unaware of the amount of data that is openly accessible on the internet, and have infrequently, if ever, thought about the consequences of combining multiple data sources. While this accessibility bothered viewers in a general way, they were often unable to connect it to concerns about their own individual privacy. only upon realizing that a camera was incorporating their image into the project was this connection made. Many viewers were bothered about their unwilling inclusion in surveillance, though this process mirrors the form of much of contemporary technological surveillance. By experiencing their own surveillance as both the surveilled and the one surveilling, viewers were able to articulate questions about the tensions between privacy and surveillance of which they were previously unaware or unconcerned. 

While there are a wide variety of languages available to use, p5.js offers an option that is accessible to beginners. My students and work- shop participants with little prior programming experience have been able to master the basics of the language within as little as one week. Nonetheless, it is important to consider the goal of your data visualization when selecting the tool, as p5.js can be a more difficult option when trying to complete traditional data visualization analyses. 

